name: Unit tests

on: [push]

env:
    COVERAGE: --coverage

jobs:
    setup:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                include:
                    - dir: "./apps/"
                      run: sudo apt install -y valgrind
                    - dir: "./apps/for_amorgos/"
                    - dir: "./apps/XCSP3/"
                      target: "naxos-xcsp3"
                      cxx: "g++-7"
                      run:
                          sudo add-apt-repository ppa:ubuntu-toolchain-r/test  &&
                          sudo apt install -y g++-7 valgrind clang-format-5.0 &&
                          $CXX --version
                    - dir: "./apps/CELAR/"
                      data: "SCEN06"
                      run: sudo apt install -y valgrind
                    - dir: "./apps/CELAR/"
                      data: "SCEN07"
                    - dir: "./apps/CELAR/"
                      data: "SCEN08"
                    - dir: "./apps/CELAR/"
                      data: "SCEN09"
                    - dir: "./apps/CELAR/"
                      data: "SCEN10"
                    - dir: "./apps/Hadoop/"
                    - dir: "./apps/ITC/"
                      data: "comp01.ctt"
                      method: "DFS"
                      run: sudo apt install -y valgrind
                    - dir: "./apps/ITC/"
                      data: "comp02.ctt"
                      method: "LDS"
                      run: sudo apt install -y valgrind
                    - dir: "./apps/ITC/"
                      data: "comp03.ctt"
                      method: "IBROAD"
                    - dir: "./apps/ITC/"
                      data: "comp04.ctt"
                      method: "PoPS"
                    - dir: "./apps/ITC/"
                      data: "comp05.ctt"
                      method: "DBS"
                      run: sudo apt install -y valgrind
                    - dir: "./apps/ITC/"
                      data: "comp06.ctt"
                      method: "CREDIT 100"
                    - dir: "./apps/ITC/"
                      data: "comp07.ctt"
                      method: "LAN 20"
                      method_l_s: "DBDS"
                    - dir: "./apps/ITC/"
                      data: "comp08.ctt"
                      method: "BBS 100"
                      method_l_s: "DFS RANDOM_VAR_HEUR"
                    - dir: "./apps/ITC/"
                      data: "comp09.ctt"
                      method: "RDFS 100 1000"
                      method_l_s: "DFS RANDOM_VAR_HEUR"
                    - dir: "./apps/ITC/"
                      data: "comp10.ctt"
                      method: "GNS"
                    - dir: "./apps/ITC/"
                      data: "comp11.ctt"
                      method: "FNS fSample"
                    - dir: "./apps/ITC/"
                      data: "comp12.ctt"
                      method: "FNS fSampleMiddle"
                      method_l_s: "FNS fSampleExp"
                    - dir: "./apps/ITC/"
                      data: "comp13.ctt"
                      method: "ISAMP 1000"
                    - dir: "./apps/ITC/"
                      data: "comp14.ctt"
                      method: "ONESAMP"
        steps:
            - uses: actions/checkout@v2
            - name: Build
              env:
                  DIRECTORY: ${{ matrix.dir }}
                  TARGET: ${{ matrix.target || null }}
                  CXX: ${{ matrix.cxx || null }}
              run: cd $DIRECTORY && cmake . && make -j $TARGET
            - name: Test
              env:
                  DIRECTORY: ${{ matrix.dir }}
                  DATASET: ${{ matrix.data || null }}
                  METHOD: ${{ matrix.method || null }}
                  METHOD_LOCAL_SEARCH: ${{ matrix.method_l_s || null }}
                  CXX: ${{ matrix.cxx || null }}
                  RUN: ${{ matrix.run || null }}
              run: eval $RUN && cd $DIRECTORY && ctest -V && cd -
